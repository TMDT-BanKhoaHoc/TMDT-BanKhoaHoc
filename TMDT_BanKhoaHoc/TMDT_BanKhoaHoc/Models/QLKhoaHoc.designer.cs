#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TMDT_BanKhoaHoc.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	using System.ComponentModel.DataAnnotations;
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLKhoaHoc")]
	public partial class QLKhoaHocDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
	#region Extensibility Method Definitions
	partial void OnCreated();
	partial void InsertAdmin(Admin instance);
	partial void UpdateAdmin(Admin instance);
	partial void DeleteAdmin(Admin instance);
	partial void InsertMONHOC(MONHOC instance);
	partial void UpdateMONHOC(MONHOC instance);
	partial void DeleteMONHOC(MONHOC instance);
	partial void InsertBaiGiang(BaiGiang instance);
	partial void UpdateBaiGiang(BaiGiang instance);
	partial void DeleteBaiGiang(BaiGiang instance);
	partial void InsertDAYHOC(DAYHOC instance);
	partial void UpdateDAYHOC(DAYHOC instance);
	partial void DeleteDAYHOC(DAYHOC instance);
	partial void InsertDONDATHANG(DONDATHANG instance);
	partial void UpdateDONDATHANG(DONDATHANG instance);
	partial void DeleteDONDATHANG(DONDATHANG instance);
	partial void InsertGIANGVIEN(GIANGVIEN instance);
	partial void UpdateGIANGVIEN(GIANGVIEN instance);
	partial void DeleteGIANGVIEN(GIANGVIEN instance);
	partial void InsertHOCVIEN(HOCVIEN instance);
	partial void UpdateHOCVIEN(HOCVIEN instance);
	partial void DeleteHOCVIEN(HOCVIEN instance);
	partial void InsertKHOAHOC(KHOAHOC instance);
	partial void UpdateKHOAHOC(KHOAHOC instance);
	partial void DeleteKHOAHOC(KHOAHOC instance);
	partial void InsertKHUYENMAI(KHUYENMAI instance);
	partial void UpdateKHUYENMAI(KHUYENMAI instance);
	partial void DeleteKHUYENMAI(KHUYENMAI instance);
	partial void InsertCHITIETDONTHANG(CHITIETDONTHANG instance);
	partial void UpdateCHITIETDONTHANG(CHITIETDONTHANG instance);
	partial void DeleteCHITIETDONTHANG(CHITIETDONTHANG instance);
	#endregion
		
		public QLKhoaHocDataContext() : 
				base(global::TMDT_BanKhoaHoc.Properties.Settings.Default.QLKhoaHocConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QLKhoaHocDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLKhoaHocDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLKhoaHocDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLKhoaHocDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Admin> Admins
		{
			get
			{
				return this.GetTable<Admin>();
			}
		}
		
		public System.Data.Linq.Table<MONHOC> MONHOCs
		{
			get
			{
				return this.GetTable<MONHOC>();
			}
		}
		
		public System.Data.Linq.Table<BaiGiang> BaiGiangs
		{
			get
			{
				return this.GetTable<BaiGiang>();
			}
		}
		
		public System.Data.Linq.Table<DAYHOC> DAYHOCs
		{
			get
			{
				return this.GetTable<DAYHOC>();
			}
		}
		
		public System.Data.Linq.Table<DONDATHANG> DONDATHANGs
		{
			get
			{
				return this.GetTable<DONDATHANG>();
			}
		}
		
		public System.Data.Linq.Table<GIANGVIEN> GIANGVIENs
		{
			get
			{
				return this.GetTable<GIANGVIEN>();
			}
		}
		
		public System.Data.Linq.Table<HOCVIEN> HOCVIENs
		{
			get
			{
				return this.GetTable<HOCVIEN>();
			}
		}
		
		public System.Data.Linq.Table<KHOAHOC> KHOAHOCs
		{
			get
			{
				return this.GetTable<KHOAHOC>();
			}
		}
		
		public System.Data.Linq.Table<KHUYENMAI> KHUYENMAIs
		{
			get
			{
				return this.GetTable<KHUYENMAI>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETDONTHANG> CHITIETDONTHANGs
		{
			get
			{
				return this.GetTable<CHITIETDONTHANG>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin")]
	public partial class Admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TaiKhoan;

		private string _MatKhau;

		private string _TenAdmin;
		
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnTaiKhoanChanging(string value);
	partial void OnTaiKhoanChanged();
	partial void OnMatKhauChanging(string value);
	partial void OnMatKhauChanged();
	partial void OnTenAdminChanging(string value);
	partial void OnTenAdminChanged();
	#endregion
		
		public Admin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaiKhoan", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]

        [Display(Name = "Tài khoản")]
        [Required(ErrorMessage = "Tài khoản không được để trống")]
        [StringLength(50, MinimumLength = 6, ErrorMessage = "Tài khoản phải có từ 6-50 ký tự")]
        public string TaiKhoan
		{
			get
			{
				return this._TaiKhoan;
			}
			set
			{
				if ((this._TaiKhoan != value))
				{
					this.OnTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._TaiKhoan = value;
					this.SendPropertyChanged("TaiKhoan");
					this.OnTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="VarChar(50) NOT NULL", CanBeNull=false)]

        [Display(Name = "Mật khẩu")]
        [Required(ErrorMessage = "Mật khẩu không được để trống")]
        [StringLength(50, MinimumLength = 6, ErrorMessage = "Mật khẩu phải có từ 6-50 ký tự")]
        public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenAdmin", DbType="NVarChar(50)")]

        [Display(Name = "Họ và tên")]
        [Required(ErrorMessage = "Họ và tên không được để trống")]
        [StringLength(50, MinimumLength = 6, ErrorMessage = "Họ và tên phải có từ 6-50 ký tự")]
        public string TenAdmin
		{
			get
			{
				return this._TenAdmin;
			}
			set
			{
				if ((this._TenAdmin != value))
				{
					this.OnTenAdminChanging(value);
					this.SendPropertyChanging();
					this._TenAdmin = value;
					this.SendPropertyChanged("TenAdmin");
					this.OnTenAdminChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MONHOC")]
	public partial class MONHOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _MaMH;

		private string _TenMH;
		
		private EntitySet<DAYHOC> _DAYHOCs;
		
		private EntitySet<KHOAHOC> _KHOAHOCs;
		
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnMaMHChanging(int value);
	partial void OnMaMHChanged();
	partial void OnTenMHChanging(string value);
	partial void OnTenMHChanged();
	#endregion
		
		public MONHOC()
		{
			this._DAYHOCs = new EntitySet<DAYHOC>(new Action<DAYHOC>(this.attach_DAYHOCs), new Action<DAYHOC>(this.detach_DAYHOCs));
			this._KHOAHOCs = new EntitySet<KHOAHOC>(new Action<KHOAHOC>(this.attach_KHOAHOCs), new Action<KHOAHOC>(this.detach_KHOAHOCs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]

        [Display(Name = "Mã môn học")]
        public int MaMH
		{
			get
			{
				return this._MaMH;
			}
			set
			{
				if ((this._MaMH != value))
				{
					this.OnMaMHChanging(value);
					this.SendPropertyChanging();
					this._MaMH = value;
					this.SendPropertyChanged("MaMH");
					this.OnMaMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenMH", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]

        [Display(Name = "Tên môn học")]
        [Required(ErrorMessage = "Tên môn học không được để trống")]
        [StringLength(50, MinimumLength = 6, ErrorMessage = "Tên môn học phải có từ 6-50 ký tự")]
        public string TenMH
		{
			get
			{
				return this._TenMH;
			}
			set
			{
				if ((this._TenMH != value))
				{
					this.OnTenMHChanging(value);
					this.SendPropertyChanging();
					this._TenMH = value;
					this.SendPropertyChanged("TenMH");
					this.OnTenMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONHOC_DAYHOC", Storage="_DAYHOCs", ThisKey="MaMH", OtherKey="MaMH")]
		public EntitySet<DAYHOC> DAYHOCs
		{
			get
			{
				return this._DAYHOCs;
			}
			set
			{
				this._DAYHOCs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONHOC_KHOAHOC", Storage="_KHOAHOCs", ThisKey="MaMH", OtherKey="MaMH")]
		public EntitySet<KHOAHOC> KHOAHOCs
		{
			get
			{
				return this._KHOAHOCs;
			}
			set
			{
				this._KHOAHOCs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DAYHOCs(DAYHOC entity)
		{
			this.SendPropertyChanging();
			entity.MONHOC = this;
		}
		
		private void detach_DAYHOCs(DAYHOC entity)
		{
			this.SendPropertyChanging();
			entity.MONHOC = null;
		}
		
		private void attach_KHOAHOCs(KHOAHOC entity)
		{
			this.SendPropertyChanging();
			entity.MONHOC = this;
		}
		
		private void detach_KHOAHOCs(KHOAHOC entity)
		{
			this.SendPropertyChanging();
			entity.MONHOC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BaiGiang")]
	public partial class BaiGiang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaBaiGiang;
		
		private int _MaKH;

		private string _Video;

		private string _SoLuocNoiDung;
		
		private EntityRef<KHOAHOC> _KHOAHOC;
		
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnMaBaiGiangChanging(int value);
	partial void OnMaBaiGiangChanged();
	partial void OnMaKHChanging(int value);
	partial void OnMaKHChanged();
	partial void OnVideoChanging(string value);
	partial void OnVideoChanged();
	partial void OnSoLuocNoiDungChanging(string value);
	partial void OnSoLuocNoiDungChanged();
	#endregion
		
		public BaiGiang()
		{
			this._KHOAHOC = default(EntityRef<KHOAHOC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBaiGiang", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]

        [Display(Name = "Mã bài giảng")]
        public int MaBaiGiang
		{
			get
			{
				return this._MaBaiGiang;
			}
			set
			{
				if ((this._MaBaiGiang != value))
				{
					this.OnMaBaiGiangChanging(value);
					this.SendPropertyChanging();
					this._MaBaiGiang = value;
					this.SendPropertyChanged("MaBaiGiang");
					this.OnMaBaiGiangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="Int NOT NULL")]

        [Display(Name = "Mã khóa học")]
        public int MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					if (this._KHOAHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Video", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]

        [Display(Name = "Video")]
        [Required(ErrorMessage = "Video không được để trống")]
        [StringLength(150, ErrorMessage = "Video không quá 150 ký tự")]
        public string Video
		{
			get
			{
				return this._Video;
			}
			set
			{
				if ((this._Video != value))
				{
					this.OnVideoChanging(value);
					this.SendPropertyChanging();
					this._Video = value;
					this.SendPropertyChanged("Video");
					this.OnVideoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuocNoiDung", DbType="NVarChar(512)")]

        [Display(Name = "Tóm tắt nội dung")]
        [StringLength(512, ErrorMessage = "Tóm tắt nội dung không quá 512 ký tự")]
        public string SoLuocNoiDung
		{
			get
			{
				return this._SoLuocNoiDung;
			}
			set
			{
				if ((this._SoLuocNoiDung != value))
				{
					this.OnSoLuocNoiDungChanging(value);
					this.SendPropertyChanging();
					this._SoLuocNoiDung = value;
					this.SendPropertyChanged("SoLuocNoiDung");
					this.OnSoLuocNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOAHOC_BaiGiang", Storage="_KHOAHOC", ThisKey="MaKH", OtherKey="MaKH", IsForeignKey=true)]

        [Display(Name = "Khóa học")]
        public KHOAHOC KHOAHOC
		{
			get
			{
				return this._KHOAHOC.Entity;
			}
			set
			{
				KHOAHOC previousValue = this._KHOAHOC.Entity;
				if (((previousValue != value) 
							|| (this._KHOAHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHOAHOC.Entity = null;
						previousValue.BaiGiangs.Remove(this);
					}
					this._KHOAHOC.Entity = value;
					if ((value != null))
					{
						value.BaiGiangs.Add(this);
						this._MaKH = value.MaKH;
					}
					else
					{
						this._MaKH = default(int);
					}
					this.SendPropertyChanged("KHOAHOC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DAYHOC")]
	public partial class DAYHOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaGV;
		
		private int _MaMH;
		
		private string _KinhNghiem;
		
		private EntityRef<MONHOC> _MONHOC;
		
		private EntityRef<GIANGVIEN> _GIANGVIEN;
		
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnMaGVChanging(int value);
	partial void OnMaGVChanged();
	partial void OnMaMHChanging(int value);
	partial void OnMaMHChanged();
	partial void OnKinhNghiemChanging(string value);
	partial void OnKinhNghiemChanged();
	#endregion
		
		public DAYHOC()
		{
			this._MONHOC = default(EntityRef<MONHOC>);
			this._GIANGVIEN = default(EntityRef<GIANGVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGV", DbType="Int NOT NULL", IsPrimaryKey=true)]

        [Display(Name = "Mã giảng viên")]
        public int MaGV
		{
			get
			{
				return this._MaGV;
			}
			set
			{
				if ((this._MaGV != value))
				{
					if (this._GIANGVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGVChanging(value);
					this.SendPropertyChanging();
					this._MaGV = value;
					this.SendPropertyChanged("MaGV");
					this.OnMaGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMH", DbType="Int NOT NULL", IsPrimaryKey=true)]

        [Display(Name = "Mã môn học")]
        public int MaMH
		{
			get
			{
				return this._MaMH;
			}
			set
			{
				if ((this._MaMH != value))
				{
					if (this._MONHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMHChanging(value);
					this.SendPropertyChanging();
					this._MaMH = value;
					this.SendPropertyChanged("MaMH");
					this.OnMaMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KinhNghiem", DbType="NVarChar(1000)")]

        [Display(Name = "Kinh nghiệm")]
        [StringLength(1000, ErrorMessage = "Kinh nghiệm có tối đa 1000 ký tự")]
        public string KinhNghiem
		{
			get
			{
				return this._KinhNghiem;
			}
			set
			{
				if ((this._KinhNghiem != value))
				{
					this.OnKinhNghiemChanging(value);
					this.SendPropertyChanging();
					this._KinhNghiem = value;
					this.SendPropertyChanged("KinhNghiem");
					this.OnKinhNghiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONHOC_DAYHOC", Storage="_MONHOC", ThisKey="MaMH", OtherKey="MaMH", IsForeignKey=true)]

        [Display(Name = "Môn học")]
        public MONHOC MONHOC
		{
			get
			{
				return this._MONHOC.Entity;
			}
			set
			{
				MONHOC previousValue = this._MONHOC.Entity;
				if (((previousValue != value) 
							|| (this._MONHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MONHOC.Entity = null;
						previousValue.DAYHOCs.Remove(this);
					}
					this._MONHOC.Entity = value;
					if ((value != null))
					{
						value.DAYHOCs.Add(this);
						this._MaMH = value.MaMH;
					}
					else
					{
						this._MaMH = default(int);
					}
					this.SendPropertyChanged("MONHOC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIANGVIEN_DAYHOC", Storage="_GIANGVIEN", ThisKey="MaGV", OtherKey="MaGV", IsForeignKey=true)]

        [Display(Name = "Giảng viên")]
        public GIANGVIEN GIANGVIEN
		{
			get
			{
				return this._GIANGVIEN.Entity;
			}
			set
			{
				GIANGVIEN previousValue = this._GIANGVIEN.Entity;
				if (((previousValue != value) 
							|| (this._GIANGVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GIANGVIEN.Entity = null;
						previousValue.DAYHOCs.Remove(this);
					}
					this._GIANGVIEN.Entity = value;
					if ((value != null))
					{
						value.DAYHOCs.Add(this);
						this._MaGV = value.MaGV;
					}
					else
					{
						this._MaGV = default(int);
					}
					this.SendPropertyChanged("GIANGVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DONDATHANG")]
	public partial class DONDATHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _MaDonHang;

		private System.Nullable<bool> _Dathanhtoan;
		
		private System.Nullable<System.DateTime> _Ngaydat;
		
		private System.Nullable<int> _MaHV;
		
		private EntitySet<CHITIETDONTHANG> _CHITIETDONTHANGs;
		
		private EntityRef<HOCVIEN> _HOCVIEN;
		
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnMaDonHangChanging(int value);
	partial void OnMaDonHangChanged();
	partial void OnDathanhtoanChanging(System.Nullable<bool> value);
	partial void OnDathanhtoanChanged();
	partial void OnNgaydatChanging(System.Nullable<System.DateTime> value);
	partial void OnNgaydatChanged();
	partial void OnMaHVChanging(System.Nullable<int> value);
	partial void OnMaHVChanged();
	#endregion
		
		public DONDATHANG()
		{
			this._CHITIETDONTHANGs = new EntitySet<CHITIETDONTHANG>(new Action<CHITIETDONTHANG>(this.attach_CHITIETDONTHANGs), new Action<CHITIETDONTHANG>(this.detach_CHITIETDONTHANGs));
			this._HOCVIEN = default(EntityRef<HOCVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDonHang", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]

        [Display(Name = "Mã đơn hàng")]
        public int MaDonHang
		{
			get
			{
				return this._MaDonHang;
			}
			set
			{
				if ((this._MaDonHang != value))
				{
					this.OnMaDonHangChanging(value);
					this.SendPropertyChanging();
					this._MaDonHang = value;
					this.SendPropertyChanged("MaDonHang");
					this.OnMaDonHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dathanhtoan", DbType="Bit")]

        [Display(Name = "Tình trạng thanh toán")]
        public System.Nullable<bool> Dathanhtoan
		{
			get
			{
				return this._Dathanhtoan;
			}
			set
			{
				if ((this._Dathanhtoan != value))
				{
					this.OnDathanhtoanChanging(value);
					this.SendPropertyChanging();
					this._Dathanhtoan = value;
					this.SendPropertyChanged("Dathanhtoan");
					this.OnDathanhtoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngaydat", DbType="DateTime")]

        [Display(Name = "Ngày lập biên lai")]
        public System.Nullable<System.DateTime> Ngaydat
		{
			get
			{
				return this._Ngaydat;
			}
			set
			{
				if ((this._Ngaydat != value))
				{
					this.OnNgaydatChanging(value);
					this.SendPropertyChanging();
					this._Ngaydat = value;
					this.SendPropertyChanged("Ngaydat");
					this.OnNgaydatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHV", DbType="Int")]

        [Display(Name = "Mã học viên")]
        public System.Nullable<int> MaHV
		{
			get
			{
				return this._MaHV;
			}
			set
			{
				if ((this._MaHV != value))
				{
					if (this._HOCVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHVChanging(value);
					this.SendPropertyChanging();
					this._MaHV = value;
					this.SendPropertyChanged("MaHV");
					this.OnMaHVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DONDATHANG_CHITIETDONTHANG", Storage="_CHITIETDONTHANGs", ThisKey="MaDonHang", OtherKey="MaDonHang")]
		public EntitySet<CHITIETDONTHANG> CHITIETDONTHANGs
		{
			get
			{
				return this._CHITIETDONTHANGs;
			}
			set
			{
				this._CHITIETDONTHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCVIEN_DONDATHANG", Storage="_HOCVIEN", ThisKey="MaHV", OtherKey="MaHV", IsForeignKey=true)]

        [Display(Name = "học viên")]
        public HOCVIEN HOCVIEN
		{
			get
			{
				return this._HOCVIEN.Entity;
			}
			set
			{
				HOCVIEN previousValue = this._HOCVIEN.Entity;
				if (((previousValue != value) 
							|| (this._HOCVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOCVIEN.Entity = null;
						previousValue.DONDATHANGs.Remove(this);
					}
					this._HOCVIEN.Entity = value;
					if ((value != null))
					{
						value.DONDATHANGs.Add(this);
						this._MaHV = value.MaHV;
					}
					else
					{
						this._MaHV = default(Nullable<int>);
					}
					this.SendPropertyChanged("HOCVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETDONTHANGs(CHITIETDONTHANG entity)
		{
			this.SendPropertyChanging();
			entity.DONDATHANG = this;
		}
		
		private void detach_CHITIETDONTHANGs(CHITIETDONTHANG entity)
		{
			this.SendPropertyChanging();
			entity.DONDATHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GIANGVIEN")]
	public partial class GIANGVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaGV;

		private string _TenGV;

		private string _DiachiGV;

		private string _Tieusu;

		private string _Dienthoai;

        private string _TaiKhoan;

        private string _MatKhau;
		
		private EntitySet<DAYHOC> _DAYHOCs;
		
		private EntitySet<KHOAHOC> _KHOAHOCs;
		
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnMaGVChanging(int value);
	partial void OnMaGVChanged();
	partial void OnTenGVChanging(string value);
	partial void OnTenGVChanged();
	partial void OnDiachiGVChanging(string value);
	partial void OnDiachiGVChanged();
	partial void OnTieusuChanging(string value);
	partial void OnTieusuChanged();
	partial void OnDienthoaiChanging(string value);
	partial void OnDienthoaiChanged();
    partial void OnTaiKhoanChanging(string value);
    partial void OnTaiKhoanChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
        #endregion

        public GIANGVIEN()
		{
			this._DAYHOCs = new EntitySet<DAYHOC>(new Action<DAYHOC>(this.attach_DAYHOCs), new Action<DAYHOC>(this.detach_DAYHOCs));
			this._KHOAHOCs = new EntitySet<KHOAHOC>(new Action<KHOAHOC>(this.attach_KHOAHOCs), new Action<KHOAHOC>(this.detach_KHOAHOCs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGV", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]

        [Display(Name = "Mã giảng viên")]
        public int MaGV
		{
			get
			{
				return this._MaGV;
			}
			set
			{
				if ((this._MaGV != value))
				{
					this.OnMaGVChanging(value);
					this.SendPropertyChanging();
					this._MaGV = value;
					this.SendPropertyChanged("MaGV");
					this.OnMaGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenGV", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]

        [Display(Name = "Tên giảng viên")]
        [Required(ErrorMessage = "Tên giảng viên không được để trống")]
        [StringLength(50, MinimumLength = 6, ErrorMessage = "Tên giảng viên phải có từ 6-50 ký tự")]
        public string TenGV
		{
			get
			{
				return this._TenGV;
			}
			set
			{
				if ((this._TenGV != value))
				{
					this.OnTenGVChanging(value);
					this.SendPropertyChanging();
					this._TenGV = value;
					this.SendPropertyChanged("TenGV");
					this.OnTenGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiachiGV", DbType="NVarChar(100)")]

        [Display(Name = "Địa chỉ")]
        [StringLength(100, ErrorMessage = "Địa chỉ giảng viên có tối đa 100 ký tự")]
        public string DiachiGV
		{
			get
			{
				return this._DiachiGV;
			}
			set
			{
				if ((this._DiachiGV != value))
				{
					this.OnDiachiGVChanging(value);
					this.SendPropertyChanging();
					this._DiachiGV = value;
					this.SendPropertyChanged("DiachiGV");
					this.OnDiachiGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tieusu", DbType="NVarChar(MAX)")]

        [Display(Name = "Tiểu sử")]
        [StringLength(4000, ErrorMessage = "Tiểu sử giảng viên có tối đa 4000 ký tự")]
        public string Tieusu
		{
			get
			{
				return this._Tieusu;
			}
			set
			{
				if ((this._Tieusu != value))
				{
					this.OnTieusuChanging(value);
					this.SendPropertyChanging();
					this._Tieusu = value;
					this.SendPropertyChanged("Tieusu");
					this.OnTieusuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dienthoai", DbType="VarChar(50)")]

        [Display(Name = "Số điện thoại")]
        [StringLength(11, MinimumLength = 10, ErrorMessage = "Số điện thoại giảng viên có từ 10-11 ký tự")]
        public string Dienthoai
		{
			get
			{
				return this._Dienthoai;
			}
			set
			{
				if ((this._Dienthoai != value))
				{
					this.OnDienthoaiChanging(value);
					this.SendPropertyChanging();
					this._Dienthoai = value;
					this.SendPropertyChanged("Dienthoai");
					this.OnDienthoaiChanged();
				}
			}
		}

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TaiKhoan", DbType = "NVarChar(20) NOT NULL")]

        [Display(Name = "Tài khoản")]
        [StringLength(20, MinimumLength = 4, ErrorMessage = "Tài khoản giảng viên có từ 4-20 ký tự")]
        public string TaiKhoan
        {
            get
            {
                return this._TaiKhoan;
            }
            set
            {
                if ((this._TaiKhoan != value))
                {
                    this.OnTaiKhoanChanging(value);
                    this.SendPropertyChanging();
                    this._TaiKhoan = value;
                    this.SendPropertyChanged("TaiKhoan");
                    this.OnTaiKhoanChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MatKhau", DbType = "NVarChar(20) NOT NULL")]

        [Display(Name = "Mật khẩu")]
        [StringLength(20, MinimumLength = 4, ErrorMessage = "Mật khẩu phải có từ 4-20 ký tự")]
        public string MatKhau
        {
            get
            {
                return this._MatKhau;
            }
            set
            {
                if ((this._MatKhau != value))
                {
                    this.OnMatKhauChanging(value);
                    this.SendPropertyChanging();
                    this._MatKhau = value;
                    this.SendPropertyChanged("MatKhau");
                    this.OnMatKhauChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIANGVIEN_DAYHOC", Storage="_DAYHOCs", ThisKey="MaGV", OtherKey="MaGV")]

        [Display(Name = "Các môn học")]
        public EntitySet<DAYHOC> DAYHOCs
		{
			get
			{
				return this._DAYHOCs;
			}
			set
			{
				this._DAYHOCs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIANGVIEN_KHOAHOC", Storage="_KHOAHOCs", ThisKey="MaGV", OtherKey="MaGV")]

        [Display(Name = "Các khóa học")]
        public EntitySet<KHOAHOC> KHOAHOCs
		{
			get
			{
				return this._KHOAHOCs;
			}
			set
			{
				this._KHOAHOCs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DAYHOCs(DAYHOC entity)
		{
			this.SendPropertyChanging();
			entity.GIANGVIEN = this;
		}
		
		private void detach_DAYHOCs(DAYHOC entity)
		{
			this.SendPropertyChanging();
			entity.GIANGVIEN = null;
		}
		
		private void attach_KHOAHOCs(KHOAHOC entity)
		{
			this.SendPropertyChanging();
			entity.GIANGVIEN = this;
		}
		
		private void detach_KHOAHOCs(KHOAHOC entity)
		{
			this.SendPropertyChanging();
			entity.GIANGVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOCVIEN")]
	public partial class HOCVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _MaHV;

		private string _HoTen;

		private string _Taikhoan;

		private string _Matkhau;

		private string _Email;

		private string _DiachiHV;

		private string _DienthoaiHV;
		
		private System.Nullable<System.DateTime> _Ngaysinh;
		
		private EntitySet<DONDATHANG> _DONDATHANGs;
		
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnMaHVChanging(int value);
	partial void OnMaHVChanged();
	partial void OnHoTenChanging(string value);
	partial void OnHoTenChanged();
	partial void OnTaikhoanChanging(string value);
	partial void OnTaikhoanChanged();
	partial void OnMatkhauChanging(string value);
	partial void OnMatkhauChanged();
	partial void OnEmailChanging(string value);
	partial void OnEmailChanged();
	partial void OnDiachiHVChanging(string value);
	partial void OnDiachiHVChanged();
	partial void OnDienthoaiHVChanging(string value);
	partial void OnDienthoaiHVChanged();
	partial void OnNgaysinhChanging(System.Nullable<System.DateTime> value);
	partial void OnNgaysinhChanged();
	#endregion
		
		public HOCVIEN()
		{
			this._DONDATHANGs = new EntitySet<DONDATHANG>(new Action<DONDATHANG>(this.attach_DONDATHANGs), new Action<DONDATHANG>(this.detach_DONDATHANGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHV", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]

		[Display(Name = "Mã học viên")]
		public int MaHV
		{
			get
			{
				return this._MaHV;
			}
			set
			{
				if ((this._MaHV != value))
				{
					this.OnMaHVChanging(value);
					this.SendPropertyChanging();
					this._MaHV = value;
					this.SendPropertyChanged("MaHV");
					this.OnMaHVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]


		[Display(Name = "Họ và tên")]
		[Required(ErrorMessage = "Họ và tên không được để trống")]
		[StringLength(50, MinimumLength = 6, ErrorMessage = "Họ và tên phải có từ 6-50 ký tự")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Taikhoan", DbType="VarChar(50)")]

        [Display(Name = "Tài khoản")]
        [Required(ErrorMessage = "Tài khoản không được để trống")]
        [StringLength(50, MinimumLength = 6, ErrorMessage = "Tài khoản phải có từ 6-50 ký tự")]
        public string Taikhoan
		{
			get
			{
				return this._Taikhoan;
			}
			set
			{
				if ((this._Taikhoan != value))
				{
					this.OnTaikhoanChanging(value);
					this.SendPropertyChanging();
					this._Taikhoan = value;
					this.SendPropertyChanged("Taikhoan");
					this.OnTaikhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Matkhau", DbType="VarChar(50) NOT NULL", CanBeNull=false)]

        [Display(Name = "Mật khẩu")]
        [Required(ErrorMessage = "Mật khẩu không được để trống")]
        [StringLength(50, MinimumLength = 6, ErrorMessage = "Mật khẩu phải có từ 6-50 ký tự")]
        public string Matkhau
		{
			get
			{
				return this._Matkhau;
			}
			set
			{
				if ((this._Matkhau != value))
				{
					this.OnMatkhauChanging(value);
					this.SendPropertyChanging();
					this._Matkhau = value;
					this.SendPropertyChanged("Matkhau");
					this.OnMatkhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)")]

        [Display(Name = "Email")]
        [Required(ErrorMessage = "Email không được để trống")]
        [StringLength(100, MinimumLength = 6, ErrorMessage = "Email phải có từ 6-100 ký tự")]
        public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiachiHV", DbType="NVarChar(200)")]

        [Display(Name = "Địa chỉ")]
        [Required(ErrorMessage = "Địa chỉ không được để trống")]
        [StringLength(200, MinimumLength = 6, ErrorMessage = "Địa chỉ phải có từ 6-200 ký tự")]
        public string DiachiHV
		{
			get
			{
				return this._DiachiHV;
			}
			set
			{
				if ((this._DiachiHV != value))
				{
					this.OnDiachiHVChanging(value);
					this.SendPropertyChanging();
					this._DiachiHV = value;
					this.SendPropertyChanged("DiachiHV");
					this.OnDiachiHVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienthoaiHV", DbType="VarChar(50)")]

        [Display(Name = "Số điện thoại")]
        [Required(ErrorMessage = "Số điện thoại không được để trống")]
        [StringLength(11, MinimumLength = 10, ErrorMessage = "Số điện thoại phải có từ 10-11 ký tự")]
        public string DienthoaiHV
		{
			get
			{
				return this._DienthoaiHV;
			}
			set
			{
				if ((this._DienthoaiHV != value))
				{
					this.OnDienthoaiHVChanging(value);
					this.SendPropertyChanging();
					this._DienthoaiHV = value;
					this.SendPropertyChanged("DienthoaiHV");
					this.OnDienthoaiHVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngaysinh", DbType="DateTime")]

        [Display(Name = "Ngày sinh")]
        public System.Nullable<System.DateTime> Ngaysinh
		{
			get
			{
				return this._Ngaysinh;
			}
			set
			{
				if ((this._Ngaysinh != value))
				{
					this.OnNgaysinhChanging(value);
					this.SendPropertyChanging();
					this._Ngaysinh = value;
					this.SendPropertyChanged("Ngaysinh");
					this.OnNgaysinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCVIEN_DONDATHANG", Storage="_DONDATHANGs", ThisKey="MaHV", OtherKey="MaHV")]

        [Display(Name = "Các biên lai")]
        public EntitySet<DONDATHANG> DONDATHANGs
		{
			get
			{
				return this._DONDATHANGs;
			}
			set
			{
				this._DONDATHANGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DONDATHANGs(DONDATHANG entity)
		{
			this.SendPropertyChanging();
			entity.HOCVIEN = this;
		}
		
		private void detach_DONDATHANGs(DONDATHANG entity)
		{
			this.SendPropertyChanging();
			entity.HOCVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHOAHOC")]
	public partial class KHOAHOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _MaKH;

		private string _TenKH;

		private System.Nullable<int> _HocPhi;

		private string _Mota;

		private string _Anhbia;
		
		private System.Nullable<System.DateTime> _Ngaycapnhat;
		
		private System.Nullable<int> _MaGV;
		
		private System.Nullable<System.DateTime> _NgayDuyet;
		
		private System.Nullable<bool> _KetQuaDuyet;
		
		private System.Nullable<int> _MaMH;
		
		private EntitySet<BaiGiang> _BaiGiangs;
		
		private EntitySet<CHITIETDONTHANG> _CHITIETDONTHANGs;
		
		private EntityRef<GIANGVIEN> _GIANGVIEN;
		
		private EntityRef<MONHOC> _MONHOC;
		
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnMaKHChanging(int value);
	partial void OnMaKHChanged();
	partial void OnTenKHChanging(string value);
	partial void OnTenKHChanged();
	partial void OnHocPhiChanging(System.Nullable<decimal> value);
	partial void OnHocPhiChanged();
	partial void OnMotaChanging(string value);
	partial void OnMotaChanged();
	partial void OnAnhbiaChanging(string value);
	partial void OnAnhbiaChanged();
	partial void OnNgaycapnhatChanging(System.Nullable<System.DateTime> value);
	partial void OnNgaycapnhatChanged();
	partial void OnMaGVChanging(System.Nullable<int> value);
	partial void OnMaGVChanged();
	partial void OnNgayDuyetChanging(System.Nullable<System.DateTime> value);
	partial void OnNgayDuyetChanged();
	partial void OnKetQuaDuyetChanging(System.Nullable<bool> value);
	partial void OnKetQuaDuyetChanged();
	partial void OnMaMHChanging(System.Nullable<int> value);
	partial void OnMaMHChanged();
	#endregion
		
		public KHOAHOC()
		{
			this._BaiGiangs = new EntitySet<BaiGiang>(new Action<BaiGiang>(this.attach_BaiGiangs), new Action<BaiGiang>(this.detach_BaiGiangs));
			this._CHITIETDONTHANGs = new EntitySet<CHITIETDONTHANG>(new Action<CHITIETDONTHANG>(this.attach_CHITIETDONTHANGs), new Action<CHITIETDONTHANG>(this.detach_CHITIETDONTHANGs));
			this._GIANGVIEN = default(EntityRef<GIANGVIEN>);
			this._MONHOC = default(EntityRef<MONHOC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]

        [Display(Name = "Mã khóa học")]
        public int MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKH", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]

        [Display(Name = "Tên khóa học")]
        [Required(ErrorMessage = "Tên khóa học không được để trống")]
        [StringLength(100, MinimumLength = 6, ErrorMessage = "Tên khóa học phải có từ {1}-{0} ký tự")]
        public string TenKH
		{
			get
			{
				return this._TenKH;
			}
			set
			{
				if ((this._TenKH != value))
				{
					this.OnTenKHChanging(value);
					this.SendPropertyChanging();
					this._TenKH = value;
					this.SendPropertyChanged("TenKH");
					this.OnTenKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HocPhi", DbType="Int")]

        [Display(Name = "Học phí")]
        [Required(ErrorMessage = "Chưa nhập học phí")]
        public System.Nullable<int> HocPhi
		{
			get
			{
				return this._HocPhi;
			}
			set
			{
				if ((this._HocPhi != value))
				{
					this.OnHocPhiChanging(value);
					this.SendPropertyChanging();
					this._HocPhi = value;
					this.SendPropertyChanged("HocPhi");
					this.OnHocPhiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mota", DbType="NVarChar(MAX)")]

        [Display(Name = "Mô tả")]
        [Required(ErrorMessage = "Mô tả không được để trống")]
        [StringLength(4000, ErrorMessage = "Mô tả không được quá {0} ký tự")]
        public string Mota
		{
			get
			{
				return this._Mota;
			}
			set
			{
				if ((this._Mota != value))
				{
					this.OnMotaChanging(value);
					this.SendPropertyChanging();
					this._Mota = value;
					this.SendPropertyChanged("Mota");
					this.OnMotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Anhbia", DbType="VarChar(50)")]

        [Display(Name = "Ảnh bìa")]
        [Required(ErrorMessage = "Ảnh bìa không được để trống")]
        [StringLength(50, ErrorMessage = "Ảnh bìa không được quá {0} ký tự")]
        public string Anhbia
		{
			get
			{
				return this._Anhbia;
			}
			set
			{
				if ((this._Anhbia != value))
				{
					this.OnAnhbiaChanging(value);
					this.SendPropertyChanging();
					this._Anhbia = value;
					this.SendPropertyChanged("Anhbia");
					this.OnAnhbiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngaycapnhat", DbType="DateTime")]

        [Display(Name = "Ngày cập nhật")]
        public System.Nullable<System.DateTime> Ngaycapnhat
		{
			get
			{
				return this._Ngaycapnhat;
			}
			set
			{
				if ((this._Ngaycapnhat != value))
				{
					this.OnNgaycapnhatChanging(value);
					this.SendPropertyChanging();
					this._Ngaycapnhat = value;
					this.SendPropertyChanged("Ngaycapnhat");
					this.OnNgaycapnhatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGV", DbType="Int")]

        [Display(Name = "Mã giảng viên")]
        public System.Nullable<int> MaGV
		{
			get
			{
				return this._MaGV;
			}
			set
			{
				if ((this._MaGV != value))
				{
					if (this._GIANGVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGVChanging(value);
					this.SendPropertyChanging();
					this._MaGV = value;
					this.SendPropertyChanged("MaGV");
					this.OnMaGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDuyet", DbType="DateTime")]

        [Display(Name = "Ngày duyệt")]
        public System.Nullable<System.DateTime> NgayDuyet
		{
			get
			{
				return this._NgayDuyet;
			}
			set
			{
				if ((this._NgayDuyet != value))
				{
					this.OnNgayDuyetChanging(value);
					this.SendPropertyChanging();
					this._NgayDuyet = value;
					this.SendPropertyChanged("NgayDuyet");
					this.OnNgayDuyetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KetQuaDuyet", DbType="Bit")]

        [Display(Name = "Kết quả duyệt")]
        public System.Nullable<bool> KetQuaDuyet
		{
			get
			{
				return this._KetQuaDuyet;
			}
			set
			{
				if ((this._KetQuaDuyet != value))
				{
					this.OnKetQuaDuyetChanging(value);
					this.SendPropertyChanging();
					this._KetQuaDuyet = value;
					this.SendPropertyChanged("KetQuaDuyet");
					this.OnKetQuaDuyetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMH", DbType="Int")]

        [Display(Name = "Mã môn học")]
        public System.Nullable<int> MaMH
		{
			get
			{
				return this._MaMH;
			}
			set
			{
				if ((this._MaMH != value))
				{
					if (this._MONHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMHChanging(value);
					this.SendPropertyChanging();
					this._MaMH = value;
					this.SendPropertyChanged("MaMH");
					this.OnMaMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOAHOC_BaiGiang", Storage="_BaiGiangs", ThisKey="MaKH", OtherKey="MaKH")]

        [Display(Name = "Các bài giảng")]
        public EntitySet<BaiGiang> BaiGiangs
		{
			get
			{
				return this._BaiGiangs;
			}
			set
			{
				this._BaiGiangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOAHOC_CHITIETDONTHANG", Storage="_CHITIETDONTHANGs", ThisKey="MaKH", OtherKey="MaKH")]

        [Display(Name = "Các đơn hàng")]
        public EntitySet<CHITIETDONTHANG> CHITIETDONTHANGs
		{
			get
			{
				return this._CHITIETDONTHANGs;
			}
			set
			{
				this._CHITIETDONTHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIANGVIEN_KHOAHOC", Storage="_GIANGVIEN", ThisKey="MaGV", OtherKey="MaGV", IsForeignKey=true)]

        [Display(Name = "Giảng viên")]
        public GIANGVIEN GIANGVIEN
		{
			get
			{
				return this._GIANGVIEN.Entity;
			}
			set
			{
				GIANGVIEN previousValue = this._GIANGVIEN.Entity;
				if (((previousValue != value) 
							|| (this._GIANGVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GIANGVIEN.Entity = null;
						previousValue.KHOAHOCs.Remove(this);
					}
					this._GIANGVIEN.Entity = value;
					if ((value != null))
					{
						value.KHOAHOCs.Add(this);
						this._MaGV = value.MaGV;
					}
					else
					{
						this._MaGV = default(Nullable<int>);
					}
					this.SendPropertyChanged("GIANGVIEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONHOC_KHOAHOC", Storage="_MONHOC", ThisKey="MaMH", OtherKey="MaMH", IsForeignKey=true)]

        [Display(Name = "Môn học")]
        public MONHOC MONHOC
		{
			get
			{
				return this._MONHOC.Entity;
			}
			set
			{
				MONHOC previousValue = this._MONHOC.Entity;
				if (((previousValue != value) 
							|| (this._MONHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MONHOC.Entity = null;
						previousValue.KHOAHOCs.Remove(this);
					}
					this._MONHOC.Entity = value;
					if ((value != null))
					{
						value.KHOAHOCs.Add(this);
						this._MaMH = value.MaMH;
					}
					else
					{
						this._MaMH = default(Nullable<int>);
					}
					this.SendPropertyChanged("MONHOC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BaiGiangs(BaiGiang entity)
		{
			this.SendPropertyChanging();
			entity.KHOAHOC = this;
		}
		
		private void detach_BaiGiangs(BaiGiang entity)
		{
			this.SendPropertyChanging();
			entity.KHOAHOC = null;
		}
		
		private void attach_CHITIETDONTHANGs(CHITIETDONTHANG entity)
		{
			this.SendPropertyChanging();
			entity.KHOAHOC = this;
		}
		
		private void detach_CHITIETDONTHANGs(CHITIETDONTHANG entity)
		{
			this.SendPropertyChanging();
			entity.KHOAHOC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHUYENMAI")]
	public partial class KHUYENMAI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private int _TienGiam;
		
		private EntitySet<CHITIETDONTHANG> _CHITIETDONTHANGs;
		
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnCodeChanging(string value);
	partial void OnCodeChanged();
	partial void OnTienGiamChanging(int value);
	partial void OnTienGiamChanged();
	#endregion
		
		public KHUYENMAI()
		{
			this._CHITIETDONTHANGs = new EntitySet<CHITIETDONTHANG>(new Action<CHITIETDONTHANG>(this.attach_CHITIETDONTHANGs), new Action<CHITIETDONTHANG>(this.detach_CHITIETDONTHANGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]

        [Display(Name = "Mã giảm giá")]
        public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TienGiam", DbType="Int NOT NULL")]

        [Display(Name = "Số tiền giảm")]
        public int TienGiam
		{
			get
			{
				return this._TienGiam;
			}
			set
			{
				if ((this._TienGiam != value))
				{
					this.OnTienGiamChanging(value);
					this.SendPropertyChanging();
					this._TienGiam = value;
					this.SendPropertyChanged("TienGiam");
					this.OnTienGiamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHUYENMAI_CHITIETDONTHANG", Storage="_CHITIETDONTHANGs", ThisKey="Code", OtherKey="CodeKhuyenMai")]
		public EntitySet<CHITIETDONTHANG> CHITIETDONTHANGs
		{
			get
			{
				return this._CHITIETDONTHANGs;
			}
			set
			{
				this._CHITIETDONTHANGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETDONTHANGs(CHITIETDONTHANG entity)
		{
			this.SendPropertyChanging();
			entity.KHUYENMAI = this;
		}
		
		private void detach_CHITIETDONTHANGs(CHITIETDONTHANG entity)
		{
			this.SendPropertyChanging();
			entity.KHUYENMAI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETDONTHANG")]
	public partial class CHITIETDONTHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDonHang;
		
		private string _CodeKhuyenMai;
		
		private int _MaKH;
		
		private EntityRef<DONDATHANG> _DONDATHANG;
		
		private EntityRef<KHOAHOC> _KHOAHOC;
		
		private EntityRef<KHUYENMAI> _KHUYENMAI;
		
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnMaDonHangChanging(int value);
	partial void OnMaDonHangChanged();
	partial void OnCodeKhuyenMaiChanging(string value);
	partial void OnCodeKhuyenMaiChanged();
	partial void OnMaKHChanging(int value);
	partial void OnMaKHChanged();
	#endregion
		
		public CHITIETDONTHANG()
		{
			this._DONDATHANG = default(EntityRef<DONDATHANG>);
			this._KHOAHOC = default(EntityRef<KHOAHOC>);
			this._KHUYENMAI = default(EntityRef<KHUYENMAI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDonHang", DbType="Int NOT NULL", IsPrimaryKey=true)]

        [Display(Name = "Mã đơn hàng")]
        public int MaDonHang
		{
			get
			{
				return this._MaDonHang;
			}
			set
			{
				if ((this._MaDonHang != value))
				{
					if (this._DONDATHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDonHangChanging(value);
					this.SendPropertyChanging();
					this._MaDonHang = value;
					this.SendPropertyChanged("MaDonHang");
					this.OnMaDonHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeKhuyenMai", DbType="Char(10)")]

        [Display(Name = "Mã giảm giá")]
        [StringLength(10, MinimumLength = 10, ErrorMessage = "Mã giảm giá phải có 10 ký tự")]
        public string CodeKhuyenMai
		{
			get
			{
				return this._CodeKhuyenMai;
			}
			set
			{
				if ((this._CodeKhuyenMai != value))
				{
					if (this._KHUYENMAI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodeKhuyenMaiChanging(value);
					this.SendPropertyChanging();
					this._CodeKhuyenMai = value;
					this.SendPropertyChanged("CodeKhuyenMai");
					this.OnCodeKhuyenMaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="Int NOT NULL", IsPrimaryKey=true)]

        [Display(Name = "Mã khách hàng")]
        public int MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					if (this._KHOAHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DONDATHANG_CHITIETDONTHANG", Storage="_DONDATHANG", ThisKey="MaDonHang", OtherKey="MaDonHang", IsForeignKey=true)]

        [Display(Name = "Các đơn hàng")]
        public DONDATHANG DONDATHANG
		{
			get
			{
				return this._DONDATHANG.Entity;
			}
			set
			{
				DONDATHANG previousValue = this._DONDATHANG.Entity;
				if (((previousValue != value) 
							|| (this._DONDATHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DONDATHANG.Entity = null;
						previousValue.CHITIETDONTHANGs.Remove(this);
					}
					this._DONDATHANG.Entity = value;
					if ((value != null))
					{
						value.CHITIETDONTHANGs.Add(this);
						this._MaDonHang = value.MaDonHang;
					}
					else
					{
						this._MaDonHang = default(int);
					}
					this.SendPropertyChanged("DONDATHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOAHOC_CHITIETDONTHANG", Storage="_KHOAHOC", ThisKey="MaKH", OtherKey="MaKH", IsForeignKey=true)]

        [Display(Name = "Khóa học")]
        public KHOAHOC KHOAHOC
		{
			get
			{
				return this._KHOAHOC.Entity;
			}
			set
			{
				KHOAHOC previousValue = this._KHOAHOC.Entity;
				if (((previousValue != value) 
							|| (this._KHOAHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHOAHOC.Entity = null;
						previousValue.CHITIETDONTHANGs.Remove(this);
					}
					this._KHOAHOC.Entity = value;
					if ((value != null))
					{
						value.CHITIETDONTHANGs.Add(this);
						this._MaKH = value.MaKH;
					}
					else
					{
						this._MaKH = default(int);
					}
					this.SendPropertyChanged("KHOAHOC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHUYENMAI_CHITIETDONTHANG", Storage="_KHUYENMAI", ThisKey="CodeKhuyenMai", OtherKey="Code", IsForeignKey=true)]

        [Display(Name = "Khuyến mãi")]
        public KHUYENMAI KHUYENMAI
		{
			get
			{
				return this._KHUYENMAI.Entity;
			}
			set
			{
				KHUYENMAI previousValue = this._KHUYENMAI.Entity;
				if (((previousValue != value) 
							|| (this._KHUYENMAI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHUYENMAI.Entity = null;
						previousValue.CHITIETDONTHANGs.Remove(this);
					}
					this._KHUYENMAI.Entity = value;
					if ((value != null))
					{
						value.CHITIETDONTHANGs.Add(this);
						this._CodeKhuyenMai = value.Code;
					}
					else
					{
						this._CodeKhuyenMai = default(string);
					}
					this.SendPropertyChanged("KHUYENMAI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
