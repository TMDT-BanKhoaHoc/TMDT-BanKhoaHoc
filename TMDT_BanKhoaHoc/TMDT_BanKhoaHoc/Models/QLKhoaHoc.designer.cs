#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TMDT_BanKhoaHoc.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
    using System.ComponentModel.DataAnnotations;
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLKhoaHoc")]
	public partial class QLKhoaHocDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAdmin(Admin instance);
    partial void UpdateAdmin(Admin instance);
    partial void DeleteAdmin(Admin instance);
    partial void InsertMONHOC(MONHOC instance);
    partial void UpdateMONHOC(MONHOC instance);
    partial void DeleteMONHOC(MONHOC instance);
    partial void InsertBaiGiang(BaiGiang instance);
    partial void UpdateBaiGiang(BaiGiang instance);
    partial void DeleteBaiGiang(BaiGiang instance);
    partial void InsertCHITIETDONTHANG(CHITIETDONTHANG instance);
    partial void UpdateCHITIETDONTHANG(CHITIETDONTHANG instance);
    partial void DeleteCHITIETDONTHANG(CHITIETDONTHANG instance);
    partial void InsertDAYHOC(DAYHOC instance);
    partial void UpdateDAYHOC(DAYHOC instance);
    partial void DeleteDAYHOC(DAYHOC instance);
    partial void InsertDONDATHANG(DONDATHANG instance);
    partial void UpdateDONDATHANG(DONDATHANG instance);
    partial void DeleteDONDATHANG(DONDATHANG instance);
    partial void InsertGIANGVIEN(GIANGVIEN instance);
    partial void UpdateGIANGVIEN(GIANGVIEN instance);
    partial void DeleteGIANGVIEN(GIANGVIEN instance);
    partial void InsertHOCVIEN(HOCVIEN instance);
    partial void UpdateHOCVIEN(HOCVIEN instance);
    partial void DeleteHOCVIEN(HOCVIEN instance);
    partial void InsertKHOAHOC(KHOAHOC instance);
    partial void UpdateKHOAHOC(KHOAHOC instance);
    partial void DeleteKHOAHOC(KHOAHOC instance);
    #endregion
		
		public QLKhoaHocDataContext() : 
				base(global::TMDT_BanKhoaHoc.Properties.Settings.Default.QLKhoaHocConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QLKhoaHocDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLKhoaHocDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLKhoaHocDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLKhoaHocDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Admin> Admins
		{
			get
			{
				return this.GetTable<Admin>();
			}
		}
		
		public System.Data.Linq.Table<MONHOC> MONHOCs
		{
			get
			{
				return this.GetTable<MONHOC>();
			}
		}
		
		public System.Data.Linq.Table<BaiGiang> BaiGiangs
		{
			get
			{
				return this.GetTable<BaiGiang>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETDONTHANG> CHITIETDONTHANGs
		{
			get
			{
				return this.GetTable<CHITIETDONTHANG>();
			}
		}
		
		public System.Data.Linq.Table<DAYHOC> DAYHOCs
		{
			get
			{
				return this.GetTable<DAYHOC>();
			}
		}
		
		public System.Data.Linq.Table<DONDATHANG> DONDATHANGs
		{
			get
			{
				return this.GetTable<DONDATHANG>();
			}
		}
		
		public System.Data.Linq.Table<GIANGVIEN> GIANGVIENs
		{
			get
			{
				return this.GetTable<GIANGVIEN>();
			}
		}
		
		public System.Data.Linq.Table<HOCVIEN> HOCVIENs
		{
			get
			{
				return this.GetTable<HOCVIEN>();
			}
		}
		
		public System.Data.Linq.Table<KHOAHOC> KHOAHOCs
		{
			get
			{
				return this.GetTable<KHOAHOC>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin")]
	public partial class Admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
        [Required(ErrorMessage = "Tài khoảng không được để trống")]
        [StringLength(50,MinimumLength = 6 , ErrorMessage = "Tài khoảng phải có 6 đến 50 ký tự")]
        [Display(Name = "Tài khoản")]
		private string _TaiKhoan;
        [Required(ErrorMessage = "Mật khẩu không được để trống")]
        [StringLength(50, MinimumLength = 6, ErrorMessage = "Mật khẩu phải có 6 đến 50 ký tự")]
        [Display(Name = "Mật khẩu")]
		private string _MatKhau;
        [Required(ErrorMessage = "Tên admin không được để trống")]
        [StringLength(50, MinimumLength = 6, ErrorMessage = "Tên admin phải có 6 đến 50 ký tự")]
        [Display(Name = "Tên admin")]
		private string _TenAdmin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTaiKhoanChanging(string value);
    partial void OnTaiKhoanChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnTenAdminChanging(string value);
    partial void OnTenAdminChanged();
    #endregion
		
		public Admin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaiKhoan", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TaiKhoan
		{
			get
			{
				return this._TaiKhoan;
			}
			set
			{
				if ((this._TaiKhoan != value))
				{
					this.OnTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._TaiKhoan = value;
					this.SendPropertyChanged("TaiKhoan");
					this.OnTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenAdmin", DbType="NVarChar(50)")]
		public string TenAdmin
		{
			get
			{
				return this._TenAdmin;
			}
			set
			{
				if ((this._TenAdmin != value))
				{
					this.OnTenAdminChanging(value);
					this.SendPropertyChanging();
					this._TenAdmin = value;
					this.SendPropertyChanged("TenAdmin");
					this.OnTenAdminChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MONHOC")]
	public partial class MONHOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		[Display(Name = "Mã môn học")]
		private int _MaMH;
        [Required(ErrorMessage = "Tên môn học không được để trống")]
        [StringLength(50, MinimumLength = 6, ErrorMessage = "Tên môn học phải có 6 đến 50 ký tự")]
        [Display(Name  = "Tên môn học")]
		private string _TenMH;
		
		private EntitySet<DAYHOC> _DAYHOCs;
		
		private EntitySet<KHOAHOC> _KHOAHOCs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaMHChanging(int value);
    partial void OnMaMHChanged();
    partial void OnTenMHChanging(string value);
    partial void OnTenMHChanged();
    #endregion
		
		public MONHOC()
		{
			this._DAYHOCs = new EntitySet<DAYHOC>(new Action<DAYHOC>(this.attach_DAYHOCs), new Action<DAYHOC>(this.detach_DAYHOCs));
			this._KHOAHOCs = new EntitySet<KHOAHOC>(new Action<KHOAHOC>(this.attach_KHOAHOCs), new Action<KHOAHOC>(this.detach_KHOAHOCs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaMH
		{
			get
			{
				return this._MaMH;
			}
			set
			{
				if ((this._MaMH != value))
				{
					this.OnMaMHChanging(value);
					this.SendPropertyChanging();
					this._MaMH = value;
					this.SendPropertyChanged("MaMH");
					this.OnMaMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenMH", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenMH
		{
			get
			{
				return this._TenMH;
			}
			set
			{
				if ((this._TenMH != value))
				{
					this.OnTenMHChanging(value);
					this.SendPropertyChanging();
					this._TenMH = value;
					this.SendPropertyChanged("TenMH");
					this.OnTenMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONHOC_DAYHOC", Storage="_DAYHOCs", ThisKey="MaMH", OtherKey="MaMH")]
		public EntitySet<DAYHOC> DAYHOCs
		{
			get
			{
				return this._DAYHOCs;
			}
			set
			{
				this._DAYHOCs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONHOC_KHOAHOC", Storage="_KHOAHOCs", ThisKey="MaMH", OtherKey="MaMH")]
		public EntitySet<KHOAHOC> KHOAHOCs
		{
			get
			{
				return this._KHOAHOCs;
			}
			set
			{
				this._KHOAHOCs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DAYHOCs(DAYHOC entity)
		{
			this.SendPropertyChanging();
			entity.MONHOC = this;
		}
		
		private void detach_DAYHOCs(DAYHOC entity)
		{
			this.SendPropertyChanging();
			entity.MONHOC = null;
		}
		
		private void attach_KHOAHOCs(KHOAHOC entity)
		{
			this.SendPropertyChanging();
			entity.MONHOC = this;
		}
		
		private void detach_KHOAHOCs(KHOAHOC entity)
		{
			this.SendPropertyChanging();
			entity.MONHOC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BaiGiang")]
	public partial class BaiGiang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		[Display(Name = "Mã bài giảng")]
		private int _MaBaiGiang;
		[Display(Name = "Mã khóa học")]
		private int _MaKH;
        [Required(ErrorMessage = "Chưa chọn video")]
		[Display(Name = "Video")]
		private string _Video;
        [Required(ErrorMessage = "Chưa tóm tắt nội dung bài giảng")]
		[Display(Name = "Tóm tắt nội dung")]
		private string _SoLuocNoiDung;
		
		private EntityRef<KHOAHOC> _KHOAHOC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaBaiGiangChanging(int value);
    partial void OnMaBaiGiangChanged();
    partial void OnMaKHChanging(int value);
    partial void OnMaKHChanged();
    partial void OnVideoChanging(string value);
    partial void OnVideoChanged();
    partial void OnSoLuocNoiDungChanging(string value);
    partial void OnSoLuocNoiDungChanged();
    #endregion
		
		public BaiGiang()
		{
			this._KHOAHOC = default(EntityRef<KHOAHOC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBaiGiang", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaBaiGiang
		{
			get
			{
				return this._MaBaiGiang;
			}
			set
			{
				if ((this._MaBaiGiang != value))
				{
					this.OnMaBaiGiangChanging(value);
					this.SendPropertyChanging();
					this._MaBaiGiang = value;
					this.SendPropertyChanged("MaBaiGiang");
					this.OnMaBaiGiangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="Int NOT NULL")]
		public int MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					if (this._KHOAHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Video", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Video
		{
			get
			{
				return this._Video;
			}
			set
			{
				if ((this._Video != value))
				{
					this.OnVideoChanging(value);
					this.SendPropertyChanging();
					this._Video = value;
					this.SendPropertyChanged("Video");
					this.OnVideoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuocNoiDung", DbType="NVarChar(512)")]
		public string SoLuocNoiDung
		{
			get
			{
				return this._SoLuocNoiDung;
			}
			set
			{
				if ((this._SoLuocNoiDung != value))
				{
					this.OnSoLuocNoiDungChanging(value);
					this.SendPropertyChanging();
					this._SoLuocNoiDung = value;
					this.SendPropertyChanged("SoLuocNoiDung");
					this.OnSoLuocNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOAHOC_BaiGiang", Storage="_KHOAHOC", ThisKey="MaKH", OtherKey="MaKH", IsForeignKey=true)]
		public KHOAHOC KHOAHOC
		{
			get
			{
				return this._KHOAHOC.Entity;
			}
			set
			{
				KHOAHOC previousValue = this._KHOAHOC.Entity;
				if (((previousValue != value) 
							|| (this._KHOAHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHOAHOC.Entity = null;
						previousValue.BaiGiangs.Remove(this);
					}
					this._KHOAHOC.Entity = value;
					if ((value != null))
					{
						value.BaiGiangs.Add(this);
						this._MaKH = value.MaKH;
					}
					else
					{
						this._MaKH = default(int);
					}
					this.SendPropertyChanged("KHOAHOC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETDONTHANG")]
	public partial class CHITIETDONTHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		[Display(Name = "Mã đơn hàng")]
		private int _MaDonHang;
		[Display(Name = "Mã khách hàng")]
		private int _MaKH;
		
		private EntityRef<DONDATHANG> _DONDATHANG;
		
		private EntityRef<KHOAHOC> _KHOAHOC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDonHangChanging(int value);
    partial void OnMaDonHangChanged();
    partial void OnMaKHChanging(int value);
    partial void OnMaKHChanged();
    #endregion
		
		public CHITIETDONTHANG()
		{
			this._DONDATHANG = default(EntityRef<DONDATHANG>);
			this._KHOAHOC = default(EntityRef<KHOAHOC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDonHang", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaDonHang
		{
			get
			{
				return this._MaDonHang;
			}
			set
			{
				if ((this._MaDonHang != value))
				{
					if (this._DONDATHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDonHangChanging(value);
					this.SendPropertyChanging();
					this._MaDonHang = value;
					this.SendPropertyChanged("MaDonHang");
					this.OnMaDonHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					if (this._KHOAHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DONDATHANG_CHITIETDONTHANG", Storage="_DONDATHANG", ThisKey="MaDonHang", OtherKey="MaDonHang", IsForeignKey=true)]
		public DONDATHANG DONDATHANG
		{
			get
			{
				return this._DONDATHANG.Entity;
			}
			set
			{
				DONDATHANG previousValue = this._DONDATHANG.Entity;
				if (((previousValue != value) 
							|| (this._DONDATHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DONDATHANG.Entity = null;
						previousValue.CHITIETDONTHANGs.Remove(this);
					}
					this._DONDATHANG.Entity = value;
					if ((value != null))
					{
						value.CHITIETDONTHANGs.Add(this);
						this._MaDonHang = value.MaDonHang;
					}
					else
					{
						this._MaDonHang = default(int);
					}
					this.SendPropertyChanged("DONDATHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOAHOC_CHITIETDONTHANG", Storage="_KHOAHOC", ThisKey="MaKH", OtherKey="MaKH", IsForeignKey=true)]
		public KHOAHOC KHOAHOC
		{
			get
			{
				return this._KHOAHOC.Entity;
			}
			set
			{
				KHOAHOC previousValue = this._KHOAHOC.Entity;
				if (((previousValue != value) 
							|| (this._KHOAHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHOAHOC.Entity = null;
						previousValue.CHITIETDONTHANGs.Remove(this);
					}
					this._KHOAHOC.Entity = value;
					if ((value != null))
					{
						value.CHITIETDONTHANGs.Add(this);
						this._MaKH = value.MaKH;
					}
					else
					{
						this._MaKH = default(int);
					}
					this.SendPropertyChanged("KHOAHOC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DAYHOC")]
	public partial class DAYHOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		[Display(Name = "Mã giảng viên")]
		private int _MaGV;
		[Display(Name = "Mã khóa học")]
		private int _MaMH;
		[Display(Name = "Kinh nghiệm")]
		private string _KinhNghiem;
		
		private EntityRef<MONHOC> _MONHOC;
		
		private EntityRef<GIANGVIEN> _GIANGVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaGVChanging(int value);
    partial void OnMaGVChanged();
    partial void OnMaMHChanging(int value);
    partial void OnMaMHChanged();
    partial void OnKinhNghiemChanging(string value);
    partial void OnKinhNghiemChanged();
    #endregion
		
		public DAYHOC()
		{
			this._MONHOC = default(EntityRef<MONHOC>);
			this._GIANGVIEN = default(EntityRef<GIANGVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGV", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaGV
		{
			get
			{
				return this._MaGV;
			}
			set
			{
				if ((this._MaGV != value))
				{
					if (this._GIANGVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGVChanging(value);
					this.SendPropertyChanging();
					this._MaGV = value;
					this.SendPropertyChanged("MaGV");
					this.OnMaGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaMH
		{
			get
			{
				return this._MaMH;
			}
			set
			{
				if ((this._MaMH != value))
				{
					if (this._MONHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMHChanging(value);
					this.SendPropertyChanging();
					this._MaMH = value;
					this.SendPropertyChanged("MaMH");
					this.OnMaMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KinhNghiem", DbType="NVarChar(50)")]
		public string KinhNghiem
		{
			get
			{
				return this._KinhNghiem;
			}
			set
			{
				if ((this._KinhNghiem != value))
				{
					this.OnKinhNghiemChanging(value);
					this.SendPropertyChanging();
					this._KinhNghiem = value;
					this.SendPropertyChanged("KinhNghiem");
					this.OnKinhNghiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONHOC_DAYHOC", Storage="_MONHOC", ThisKey="MaMH", OtherKey="MaMH", IsForeignKey=true)]
		public MONHOC MONHOC
		{
			get
			{
				return this._MONHOC.Entity;
			}
			set
			{
				MONHOC previousValue = this._MONHOC.Entity;
				if (((previousValue != value) 
							|| (this._MONHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MONHOC.Entity = null;
						previousValue.DAYHOCs.Remove(this);
					}
					this._MONHOC.Entity = value;
					if ((value != null))
					{
						value.DAYHOCs.Add(this);
						this._MaMH = value.MaMH;
					}
					else
					{
						this._MaMH = default(int);
					}
					this.SendPropertyChanged("MONHOC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIANGVIEN_DAYHOC", Storage="_GIANGVIEN", ThisKey="MaGV", OtherKey="MaGV", IsForeignKey=true)]
		public GIANGVIEN GIANGVIEN
		{
			get
			{
				return this._GIANGVIEN.Entity;
			}
			set
			{
				GIANGVIEN previousValue = this._GIANGVIEN.Entity;
				if (((previousValue != value) 
							|| (this._GIANGVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GIANGVIEN.Entity = null;
						previousValue.DAYHOCs.Remove(this);
					}
					this._GIANGVIEN.Entity = value;
					if ((value != null))
					{
						value.DAYHOCs.Add(this);
						this._MaGV = value.MaGV;
					}
					else
					{
						this._MaGV = default(int);
					}
					this.SendPropertyChanged("GIANGVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DONDATHANG")]
	public partial class DONDATHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		[Display(Name = "Mã biên lai")]
		private int _MaDonHang;
		[Display(Name = "Tình trạng thanh toán")]
		private System.Nullable<bool> _Dathanhtoan;
		[Display(Name = "Ngày lập")]
		private System.Nullable<System.DateTime> _Ngaydat;
		[Display(Name = "Mã học viên")]
		private System.Nullable<int> _MaHV;
		
		private EntitySet<CHITIETDONTHANG> _CHITIETDONTHANGs;
		
		private EntityRef<HOCVIEN> _HOCVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDonHangChanging(int value);
    partial void OnMaDonHangChanged();
    partial void OnDathanhtoanChanging(System.Nullable<bool> value);
    partial void OnDathanhtoanChanged();
    partial void OnNgaydatChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaydatChanged();
    partial void OnMaHVChanging(System.Nullable<int> value);
    partial void OnMaHVChanged();
    #endregion
		
		public DONDATHANG()
		{
			this._CHITIETDONTHANGs = new EntitySet<CHITIETDONTHANG>(new Action<CHITIETDONTHANG>(this.attach_CHITIETDONTHANGs), new Action<CHITIETDONTHANG>(this.detach_CHITIETDONTHANGs));
			this._HOCVIEN = default(EntityRef<HOCVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDonHang", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaDonHang
		{
			get
			{
				return this._MaDonHang;
			}
			set
			{
				if ((this._MaDonHang != value))
				{
					this.OnMaDonHangChanging(value);
					this.SendPropertyChanging();
					this._MaDonHang = value;
					this.SendPropertyChanged("MaDonHang");
					this.OnMaDonHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dathanhtoan", DbType="Bit")]
		public System.Nullable<bool> Dathanhtoan
		{
			get
			{
				return this._Dathanhtoan;
			}
			set
			{
				if ((this._Dathanhtoan != value))
				{
					this.OnDathanhtoanChanging(value);
					this.SendPropertyChanging();
					this._Dathanhtoan = value;
					this.SendPropertyChanged("Dathanhtoan");
					this.OnDathanhtoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngaydat", DbType="DateTime")]
		public System.Nullable<System.DateTime> Ngaydat
		{
			get
			{
				return this._Ngaydat;
			}
			set
			{
				if ((this._Ngaydat != value))
				{
					this.OnNgaydatChanging(value);
					this.SendPropertyChanging();
					this._Ngaydat = value;
					this.SendPropertyChanged("Ngaydat");
					this.OnNgaydatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHV", DbType="Int")]
		public System.Nullable<int> MaHV
		{
			get
			{
				return this._MaHV;
			}
			set
			{
				if ((this._MaHV != value))
				{
					if (this._HOCVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHVChanging(value);
					this.SendPropertyChanging();
					this._MaHV = value;
					this.SendPropertyChanged("MaHV");
					this.OnMaHVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DONDATHANG_CHITIETDONTHANG", Storage="_CHITIETDONTHANGs", ThisKey="MaDonHang", OtherKey="MaDonHang")]
		public EntitySet<CHITIETDONTHANG> CHITIETDONTHANGs
		{
			get
			{
				return this._CHITIETDONTHANGs;
			}
			set
			{
				this._CHITIETDONTHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCVIEN_DONDATHANG", Storage="_HOCVIEN", ThisKey="MaHV", OtherKey="MaHV", IsForeignKey=true)]
		public HOCVIEN HOCVIEN
		{
			get
			{
				return this._HOCVIEN.Entity;
			}
			set
			{
				HOCVIEN previousValue = this._HOCVIEN.Entity;
				if (((previousValue != value) 
							|| (this._HOCVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOCVIEN.Entity = null;
						previousValue.DONDATHANGs.Remove(this);
					}
					this._HOCVIEN.Entity = value;
					if ((value != null))
					{
						value.DONDATHANGs.Add(this);
						this._MaHV = value.MaHV;
					}
					else
					{
						this._MaHV = default(Nullable<int>);
					}
					this.SendPropertyChanged("HOCVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETDONTHANGs(CHITIETDONTHANG entity)
		{
			this.SendPropertyChanging();
			entity.DONDATHANG = this;
		}
		
		private void detach_CHITIETDONTHANGs(CHITIETDONTHANG entity)
		{
			this.SendPropertyChanging();
			entity.DONDATHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GIANGVIEN")]
	public partial class GIANGVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		[Display(Name = "Mã giảng viên")]
		private int _MaGV;

        [Required(ErrorMessage = "Chưa nhập tên giảng viên")]
		[Display(Name = "Tên giảng viên")]
		private string _TenGV;

        [Required(ErrorMessage = "Chưa nhập địa chỉ")]
		[Display(Name = "Địa chỉ giảng viên")]
		private string _DiachiGV;

		[Display(Name = "Giới thiệu")]
		private string _Tieusu;

        [Required(ErrorMessage = "Chưa nhập số điện thoại")]
        [StringLength(11,MinimumLength = 10,ErrorMessage = "Số điện thoại phải từ 10-11 ký tự")]
		[Display(Name = "Số điện thoại")]
		private string _Dienthoai;
		
		private EntitySet<DAYHOC> _DAYHOCs;
		
		private EntitySet<KHOAHOC> _KHOAHOCs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaGVChanging(int value);
    partial void OnMaGVChanged();
    partial void OnTenGVChanging(string value);
    partial void OnTenGVChanged();
    partial void OnDiachiGVChanging(string value);
    partial void OnDiachiGVChanged();
    partial void OnTieusuChanging(string value);
    partial void OnTieusuChanged();
    partial void OnDienthoaiChanging(string value);
    partial void OnDienthoaiChanged();
    #endregion
		
		public GIANGVIEN()
		{
			this._DAYHOCs = new EntitySet<DAYHOC>(new Action<DAYHOC>(this.attach_DAYHOCs), new Action<DAYHOC>(this.detach_DAYHOCs));
			this._KHOAHOCs = new EntitySet<KHOAHOC>(new Action<KHOAHOC>(this.attach_KHOAHOCs), new Action<KHOAHOC>(this.detach_KHOAHOCs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGV", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaGV
		{
			get
			{
				return this._MaGV;
			}
			set
			{
				if ((this._MaGV != value))
				{
					this.OnMaGVChanging(value);
					this.SendPropertyChanging();
					this._MaGV = value;
					this.SendPropertyChanged("MaGV");
					this.OnMaGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenGV", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenGV
		{
			get
			{
				return this._TenGV;
			}
			set
			{
				if ((this._TenGV != value))
				{
					this.OnTenGVChanging(value);
					this.SendPropertyChanging();
					this._TenGV = value;
					this.SendPropertyChanged("TenGV");
					this.OnTenGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiachiGV", DbType="NVarChar(100)")]
		public string DiachiGV
		{
			get
			{
				return this._DiachiGV;
			}
			set
			{
				if ((this._DiachiGV != value))
				{
					this.OnDiachiGVChanging(value);
					this.SendPropertyChanging();
					this._DiachiGV = value;
					this.SendPropertyChanged("DiachiGV");
					this.OnDiachiGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tieusu", DbType="NVarChar(MAX)")]
		public string Tieusu
		{
			get
			{
				return this._Tieusu;
			}
			set
			{
				if ((this._Tieusu != value))
				{
					this.OnTieusuChanging(value);
					this.SendPropertyChanging();
					this._Tieusu = value;
					this.SendPropertyChanged("Tieusu");
					this.OnTieusuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dienthoai", DbType="VarChar(50)")]
		public string Dienthoai
		{
			get
			{
				return this._Dienthoai;
			}
			set
			{
				if ((this._Dienthoai != value))
				{
					this.OnDienthoaiChanging(value);
					this.SendPropertyChanging();
					this._Dienthoai = value;
					this.SendPropertyChanged("Dienthoai");
					this.OnDienthoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIANGVIEN_DAYHOC", Storage="_DAYHOCs", ThisKey="MaGV", OtherKey="MaGV")]
		public EntitySet<DAYHOC> DAYHOCs
		{
			get
			{
				return this._DAYHOCs;
			}
			set
			{
				this._DAYHOCs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIANGVIEN_KHOAHOC", Storage="_KHOAHOCs", ThisKey="MaGV", OtherKey="MaGV")]
		public EntitySet<KHOAHOC> KHOAHOCs
		{
			get
			{
				return this._KHOAHOCs;
			}
			set
			{
				this._KHOAHOCs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DAYHOCs(DAYHOC entity)
		{
			this.SendPropertyChanging();
			entity.GIANGVIEN = this;
		}
		
		private void detach_DAYHOCs(DAYHOC entity)
		{
			this.SendPropertyChanging();
			entity.GIANGVIEN = null;
		}
		
		private void attach_KHOAHOCs(KHOAHOC entity)
		{
			this.SendPropertyChanging();
			entity.GIANGVIEN = this;
		}
		
		private void detach_KHOAHOCs(KHOAHOC entity)
		{
			this.SendPropertyChanging();
			entity.GIANGVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOCVIEN")]
	public partial class HOCVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		[Display(Name = "Mã học viên")]
		private int _MaHV;

        [Required(ErrorMessage = "Họ và tên không được để trống")]
        [StringLength(6,MinimumLength = 50, ErrorMessage = "Họ và tên phải từ 6-50 ký tự")]
		[Display(Name = "Họ và tên")]
		private string _HoTen;

        [Required(ErrorMessage = "Tài khoản không được để trống")]
        [StringLength(6, MinimumLength = 50, ErrorMessage = "Tài khoản phải từ 6-50 ký tự")]
        [Display(Name = "Tài khoản")]
		private string _Taikhoan;

        [Required(ErrorMessage = "Mật khẩu không được để trống")]
        [StringLength(6, MinimumLength = 50, ErrorMessage = "Mật khẩu phải từ 6-50 ký tự")]
        [Display(Name = "Mật khẩu")]
		private string _Matkhau;

        [Required(ErrorMessage = "Email không được để trống")]
        [StringLength(6, MinimumLength = 50, ErrorMessage = "Email phải từ 6-50 ký tự")]
        [Display(Name = "Email")]
		private string _Email;

		[Display(Name = "Địa chỉ")]
		private string _DiachiHV;

        [Display(Name = "Số điện thoại")]
		private string _DienthoaiHV;
		
		private System.Nullable<System.DateTime> _Ngaysinh;
		
		private EntitySet<DONDATHANG> _DONDATHANGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHVChanging(int value);
    partial void OnMaHVChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnTaikhoanChanging(string value);
    partial void OnTaikhoanChanged();
    partial void OnMatkhauChanging(string value);
    partial void OnMatkhauChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDiachiHVChanging(string value);
    partial void OnDiachiHVChanged();
    partial void OnDienthoaiHVChanging(string value);
    partial void OnDienthoaiHVChanged();
    partial void OnNgaysinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaysinhChanged();
    #endregion
		
		public HOCVIEN()
		{
			this._DONDATHANGs = new EntitySet<DONDATHANG>(new Action<DONDATHANG>(this.attach_DONDATHANGs), new Action<DONDATHANG>(this.detach_DONDATHANGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHV", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaHV
		{
			get
			{
				return this._MaHV;
			}
			set
			{
				if ((this._MaHV != value))
				{
					this.OnMaHVChanging(value);
					this.SendPropertyChanging();
					this._MaHV = value;
					this.SendPropertyChanged("MaHV");
					this.OnMaHVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Taikhoan", DbType="VarChar(50)")]
		public string Taikhoan
		{
			get
			{
				return this._Taikhoan;
			}
			set
			{
				if ((this._Taikhoan != value))
				{
					this.OnTaikhoanChanging(value);
					this.SendPropertyChanging();
					this._Taikhoan = value;
					this.SendPropertyChanged("Taikhoan");
					this.OnTaikhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Matkhau", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Matkhau
		{
			get
			{
				return this._Matkhau;
			}
			set
			{
				if ((this._Matkhau != value))
				{
					this.OnMatkhauChanging(value);
					this.SendPropertyChanging();
					this._Matkhau = value;
					this.SendPropertyChanged("Matkhau");
					this.OnMatkhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiachiHV", DbType="NVarChar(200)")]
		public string DiachiHV
		{
			get
			{
				return this._DiachiHV;
			}
			set
			{
				if ((this._DiachiHV != value))
				{
					this.OnDiachiHVChanging(value);
					this.SendPropertyChanging();
					this._DiachiHV = value;
					this.SendPropertyChanged("DiachiHV");
					this.OnDiachiHVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienthoaiHV", DbType="VarChar(50)")]
		public string DienthoaiHV
		{
			get
			{
				return this._DienthoaiHV;
			}
			set
			{
				if ((this._DienthoaiHV != value))
				{
					this.OnDienthoaiHVChanging(value);
					this.SendPropertyChanging();
					this._DienthoaiHV = value;
					this.SendPropertyChanged("DienthoaiHV");
					this.OnDienthoaiHVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngaysinh", DbType="DateTime")]
		public System.Nullable<System.DateTime> Ngaysinh
		{
			get
			{
				return this._Ngaysinh;
			}
			set
			{
				if ((this._Ngaysinh != value))
				{
					this.OnNgaysinhChanging(value);
					this.SendPropertyChanging();
					this._Ngaysinh = value;
					this.SendPropertyChanged("Ngaysinh");
					this.OnNgaysinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCVIEN_DONDATHANG", Storage="_DONDATHANGs", ThisKey="MaHV", OtherKey="MaHV")]
		public EntitySet<DONDATHANG> DONDATHANGs
		{
			get
			{
				return this._DONDATHANGs;
			}
			set
			{
				this._DONDATHANGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DONDATHANGs(DONDATHANG entity)
		{
			this.SendPropertyChanging();
			entity.HOCVIEN = this;
		}
		
		private void detach_DONDATHANGs(DONDATHANG entity)
		{
			this.SendPropertyChanging();
			entity.HOCVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHOAHOC")]
	public partial class KHOAHOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		[Display(Name = "Mã khóc học")]
		private int _MaKH;

        [Required(ErrorMessage = "Tên khóa học không được để trống")]
        [StringLength(6, MinimumLength = 50, ErrorMessage = "Tên khóa học phải từ 6-50 ký tự")]
        [Display(Name = "Tên khóa học")]
		private string _TenKH;

        [Required(ErrorMessage = "Chưa nhập học phí")]
        [Display(Name = "Học phí")]
		private System.Nullable<decimal> _HocPhi;

		[Display(Name = "Mô tả")]
		private string _Mota;

		[Display(Name = "Ảnh bìa")]
		private string _Anhbia;

		[Display(Name = "Ngày cập nhật")]
		private System.Nullable<System.DateTime> _Ngaycapnhat;

		[Display(Name = "Mã giảng viên")]
		private System.Nullable<int> _MaGV;

		[Display(Name = "Ngày duyệt")]
		private System.Nullable<System.DateTime> _NgayDuyet;

		[Display(Name = "Kết quả duyệt")]
		private System.Nullable<bool> _KetQuaDuyet;

		[Display(Name = "Mã môn học")]
		private System.Nullable<int> _MaMH;
		
		private EntitySet<BaiGiang> _BaiGiangs;
		
		private EntitySet<CHITIETDONTHANG> _CHITIETDONTHANGs;
		
		private EntityRef<GIANGVIEN> _GIANGVIEN;
		
		private EntityRef<MONHOC> _MONHOC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKHChanging(int value);
    partial void OnMaKHChanged();
    partial void OnTenKHChanging(string value);
    partial void OnTenKHChanged();
    partial void OnHocPhiChanging(System.Nullable<decimal> value);
    partial void OnHocPhiChanged();
    partial void OnMotaChanging(string value);
    partial void OnMotaChanged();
    partial void OnAnhbiaChanging(string value);
    partial void OnAnhbiaChanged();
    partial void OnNgaycapnhatChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaycapnhatChanged();
    partial void OnMaGVChanging(System.Nullable<int> value);
    partial void OnMaGVChanged();
    partial void OnNgayDuyetChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayDuyetChanged();
    partial void OnKetQuaDuyetChanging(System.Nullable<bool> value);
    partial void OnKetQuaDuyetChanged();
    partial void OnMaMHChanging(System.Nullable<int> value);
    partial void OnMaMHChanged();
    #endregion
		
		public KHOAHOC()
		{
			this._BaiGiangs = new EntitySet<BaiGiang>(new Action<BaiGiang>(this.attach_BaiGiangs), new Action<BaiGiang>(this.detach_BaiGiangs));
			this._CHITIETDONTHANGs = new EntitySet<CHITIETDONTHANG>(new Action<CHITIETDONTHANG>(this.attach_CHITIETDONTHANGs), new Action<CHITIETDONTHANG>(this.detach_CHITIETDONTHANGs));
			this._GIANGVIEN = default(EntityRef<GIANGVIEN>);
			this._MONHOC = default(EntityRef<MONHOC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKH", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenKH
		{
			get
			{
				return this._TenKH;
			}
			set
			{
				if ((this._TenKH != value))
				{
					this.OnTenKHChanging(value);
					this.SendPropertyChanging();
					this._TenKH = value;
					this.SendPropertyChanged("TenKH");
					this.OnTenKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HocPhi", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> HocPhi
		{
			get
			{
				return this._HocPhi;
			}
			set
			{
				if ((this._HocPhi != value))
				{
					this.OnHocPhiChanging(value);
					this.SendPropertyChanging();
					this._HocPhi = value;
					this.SendPropertyChanged("HocPhi");
					this.OnHocPhiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mota", DbType="NVarChar(MAX)")]
		public string Mota
		{
			get
			{
				return this._Mota;
			}
			set
			{
				if ((this._Mota != value))
				{
					this.OnMotaChanging(value);
					this.SendPropertyChanging();
					this._Mota = value;
					this.SendPropertyChanged("Mota");
					this.OnMotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Anhbia", DbType="VarChar(50)")]
		public string Anhbia
		{
			get
			{
				return this._Anhbia;
			}
			set
			{
				if ((this._Anhbia != value))
				{
					this.OnAnhbiaChanging(value);
					this.SendPropertyChanging();
					this._Anhbia = value;
					this.SendPropertyChanged("Anhbia");
					this.OnAnhbiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngaycapnhat", DbType="DateTime")]
		public System.Nullable<System.DateTime> Ngaycapnhat
		{
			get
			{
				return this._Ngaycapnhat;
			}
			set
			{
				if ((this._Ngaycapnhat != value))
				{
					this.OnNgaycapnhatChanging(value);
					this.SendPropertyChanging();
					this._Ngaycapnhat = value;
					this.SendPropertyChanged("Ngaycapnhat");
					this.OnNgaycapnhatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGV", DbType="Int")]
		public System.Nullable<int> MaGV
		{
			get
			{
				return this._MaGV;
			}
			set
			{
				if ((this._MaGV != value))
				{
					if (this._GIANGVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGVChanging(value);
					this.SendPropertyChanging();
					this._MaGV = value;
					this.SendPropertyChanged("MaGV");
					this.OnMaGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDuyet", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayDuyet
		{
			get
			{
				return this._NgayDuyet;
			}
			set
			{
				if ((this._NgayDuyet != value))
				{
					this.OnNgayDuyetChanging(value);
					this.SendPropertyChanging();
					this._NgayDuyet = value;
					this.SendPropertyChanged("NgayDuyet");
					this.OnNgayDuyetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KetQuaDuyet", DbType="Bit")]
		public System.Nullable<bool> KetQuaDuyet
		{
			get
			{
				return this._KetQuaDuyet;
			}
			set
			{
				if ((this._KetQuaDuyet != value))
				{
					this.OnKetQuaDuyetChanging(value);
					this.SendPropertyChanging();
					this._KetQuaDuyet = value;
					this.SendPropertyChanged("KetQuaDuyet");
					this.OnKetQuaDuyetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMH", DbType="Int")]
		public System.Nullable<int> MaMH
		{
			get
			{
				return this._MaMH;
			}
			set
			{
				if ((this._MaMH != value))
				{
					if (this._MONHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMHChanging(value);
					this.SendPropertyChanging();
					this._MaMH = value;
					this.SendPropertyChanged("MaMH");
					this.OnMaMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOAHOC_BaiGiang", Storage="_BaiGiangs", ThisKey="MaKH", OtherKey="MaKH")]
		public EntitySet<BaiGiang> BaiGiangs
		{
			get
			{
				return this._BaiGiangs;
			}
			set
			{
				this._BaiGiangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOAHOC_CHITIETDONTHANG", Storage="_CHITIETDONTHANGs", ThisKey="MaKH", OtherKey="MaKH")]
		public EntitySet<CHITIETDONTHANG> CHITIETDONTHANGs
		{
			get
			{
				return this._CHITIETDONTHANGs;
			}
			set
			{
				this._CHITIETDONTHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIANGVIEN_KHOAHOC", Storage="_GIANGVIEN", ThisKey="MaGV", OtherKey="MaGV", IsForeignKey=true)]
		public GIANGVIEN GIANGVIEN
		{
			get
			{
				return this._GIANGVIEN.Entity;
			}
			set
			{
				GIANGVIEN previousValue = this._GIANGVIEN.Entity;
				if (((previousValue != value) 
							|| (this._GIANGVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GIANGVIEN.Entity = null;
						previousValue.KHOAHOCs.Remove(this);
					}
					this._GIANGVIEN.Entity = value;
					if ((value != null))
					{
						value.KHOAHOCs.Add(this);
						this._MaGV = value.MaGV;
					}
					else
					{
						this._MaGV = default(Nullable<int>);
					}
					this.SendPropertyChanged("GIANGVIEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONHOC_KHOAHOC", Storage="_MONHOC", ThisKey="MaMH", OtherKey="MaMH", IsForeignKey=true)]
		public MONHOC MONHOC
		{
			get
			{
				return this._MONHOC.Entity;
			}
			set
			{
				MONHOC previousValue = this._MONHOC.Entity;
				if (((previousValue != value) 
							|| (this._MONHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MONHOC.Entity = null;
						previousValue.KHOAHOCs.Remove(this);
					}
					this._MONHOC.Entity = value;
					if ((value != null))
					{
						value.KHOAHOCs.Add(this);
						this._MaMH = value.MaMH;
					}
					else
					{
						this._MaMH = default(Nullable<int>);
					}
					this.SendPropertyChanged("MONHOC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BaiGiangs(BaiGiang entity)
		{
			this.SendPropertyChanging();
			entity.KHOAHOC = this;
		}
		
		private void detach_BaiGiangs(BaiGiang entity)
		{
			this.SendPropertyChanging();
			entity.KHOAHOC = null;
		}
		
		private void attach_CHITIETDONTHANGs(CHITIETDONTHANG entity)
		{
			this.SendPropertyChanging();
			entity.KHOAHOC = this;
		}
		
		private void detach_CHITIETDONTHANGs(CHITIETDONTHANG entity)
		{
			this.SendPropertyChanging();
			entity.KHOAHOC = null;
		}
	}
}
#pragma warning restore 1591
